#!/bin/bash
#
# Copyright (c) 2022-2024 Nagrind <https://github.com/nagrind>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

set -euo pipefail
shopt -s lastpipe

err() { echo "${@}" 1>&2; exit 1; }
usage() { err "Usage: $(basename "${0}") [-f] [-4|-6] <asn>"; }

declare mode=""
declare -i force=0
while getopts ":f46" opts; do
  case "${opts}" in
    f) force=1 ;;
    4) mode+="." ;;
    6) mode+=":" ;;
    *) usage ;;
  esac
done
shift $((OPTIND-1))

[[ ${#} != 1 ]] && usage

# (Subset of) Query Types supported by the LACNIC Whois database
#
# You can query the organization's Owner-ID in the LACNIC Whois database. At
# the bottom of the results page you will see a list of the resources
# assigned to the organization under the following tags:
#
# aut-num: for autonomous system numbers (ASN)
# inetnum: for IPv4 and IPv6 address blocks
#
# On Unix systems, you can also use the following command:
#
# whois -h whois.lacnic.net IPv4
# whois -h whois.lacnic.net IPv6
# whois -h whois.lacnic.net ASN
#
# Reference: https://www.lacnic.net/1136/2/lacnic
#            /resource-administration-system-and-whois-service-faq

for try in {1..3}; do
  [[ ${try} == 1 ]] || sleep 3
  result="$(whois -h whois.lacnic.net -- "${1}")"
  # shellcheck disable=SC2015
  [[ "${result}" =~ (Query\ rate\ limit\ exceeded|Permission\ denied) ]] && \
    { { [[ ${force} == 1 ]] && [[ ${try} != 3 ]]; } && continue || \
      err "${BASH_REMATCH[1]}"; } || break
done

declare -i lines=0
gawk -F ': ' '/^inetnum:.*['"${mode:-.:}"']/ { print $2 }' <<< "${result}" | \
while IFS=$'\n' read -r line; do
  lines=$((++lines))                                    
  echo "${line// /}"
done

# shellcheck disable=SC2015
[[ ${lines} == 0 ]] && err "No entries found" || :
